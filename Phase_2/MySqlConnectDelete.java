package Team2;

// Group Names: Jose Franco Baquera, Michael Daviet, and Kevin Hindman
// Group Number: 2
// CS482: DATABASE MANAGEMENT - FALL 2018
// Project Phase 2 - Due on 11/4/2018 

// Import statment needed for us to connect the Java interface with 
// the MySql server. 
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;

public class MySqlConnectDelete extends javax.swing.JFrame {
    
    // Every MySqlConnectDelete object will have a series of attributes.
    private Connection sqlConnection;
    private String errorMessage = "Whoops. Error Type: ";
    private String copyDeleteQuery;
    Statement sqlDeleteStatement;  
    private DeleteData tempDeleteDataJFrame;

    /**
     * Creates new form MySqlConnectDelete
     */
    public MySqlConnectDelete( DeleteData tempDeleteData, String tempQueryToExecute ) {
        
        // Inizalize all the attributes of every object that is instanziated using the MySqlConnectDelete class.
        initComponents();
        tempDeleteDataJFrame = tempDeleteData;
        copyDeleteQuery = tempQueryToExecute;

         // Use a try and catch in order to make sure that a connection can be esablished.
        try { 
            
            // Try to establish a connection.
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConnection = DriverManager.getConnection("jdbc:mysql://dbclass.cs.nmsu.edu:3306/cs482502fa18_jbaquera?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "jbaquera", "CS482-2018" );
            sqlDeleteStatement = sqlConnection.createStatement();
            
        } // end try.
        
        catch ( Exception e ){
            
            // If the connection could not be established, print out an error message.
            errorMessage = errorMessage + e.getMessage();
            jTextArea1.append(errorMessage + "\n");
            jTextArea1.append("Please go back and recheck your Internet Connection!\n");
            errorMessage = "Whoops. Error Type: ";
          
        } // end catch.
        
    } // end constructor.

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(107, 25, 25));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel1.setSize(new java.awt.Dimension(800, 600));

        jButton1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jButton1.setLabel("Go Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // jButton1 corresponds to the "Go Back" button.
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // If the User presses this botton, hide the JFrame panel and return the 
        // previous menu.
        
        // Before returning, close the connection and statement objects.
        if (sqlDeleteStatement != null){
            try {
                sqlDeleteStatement.close();
            } catch (SQLException ex) {
                Logger.getLogger(MySqlConnectDelete.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println( "Error while closing statement.");
            } // end catch.
        } // end if.
        
        if (sqlConnection != null){
            try {
                sqlConnection.close();
            } catch (SQLException ex) {
                Logger.getLogger(MySqlConnectDelete.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println( "Error while closing connection.");
            } // end catch.
        } // end if.
        
        tempDeleteDataJFrame.setVisible( true );
        setVisible( false );

    }//GEN-LAST:event_jButton1ActionPerformed

    // This method will delete the data correpsonding to user input or bottons pressed.
    public void deleteData( ) {
        
        // Use a try and catch that will catch any syntax errors entered by the user or nay other data. 
        try{
           
           // Start a timer that will count the amount of time it took to execute the query.
           long start = System.currentTimeMillis();
           // Execute deletion
           sqlDeleteStatement.executeUpdate( copyDeleteQuery );
         
           // Calculate the amount of time it took to delete the data.
           long finish = System.currentTimeMillis();
           long timeToExecute = finish - start;

           // Display the time it took to execute the query.
           jTextArea1.append( "SUCCESS!! The time it took to delete the data was: " + timeToExecute + " milliseconds (or equally; " + ((float)timeToExecute /1000) + " seconds, " + ((float)timeToExecute /60000) + " minutes).\n");
           jTextArea1.append( "Now please go back!\n" );
           
       } // end try.
       
       catch ( Exception e ){
           
           // Diplay the error if the specified data could not be deleted. This will happend if the user entered a syntactically 
           // incorrect delete query. 
           errorMessage = errorMessage + e.getMessage();
           jTextArea1.append(errorMessage + "\n" );
           jTextArea1.append("Please go back!\n");
           errorMessage = "Whoops. Error Type: ";
           
       } // end catch.
           
    } // end deleteData function.
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

} // end class.
