
package Team2;

// Group Names: Jose Franco Baquera, Michael Daviet, and Kevin Hindman
// Group Number: 2
// CS482: DATABASE MANAGEMENT - FALL 2018
// Project Phase 2 - Due on 11/4/2018 

// Import statment needed for us to connect the Java interface with 
// the MySql server. 
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;

// MySqlConnect class.
public class MySqlConnectQuery extends javax.swing.JFrame {
    
    // Every MySqlConnectQuery object will have a series of attributes.
    private Connection sqlConnection;
    private String errorMessage = "Whoops. Error Type: ";
    private ProduceQuery tempJFrameProduceQuery;
    private String copyUserQuery;
    private PreparedStatement sqlStatement;
    private ResultSet resultSet;
    
    // MySqlConnectTemp constructor. 
    public MySqlConnectQuery( ProduceQuery tempProduceQuery ) {
        
        // Inizalize the required components.
        initComponents();
        tempJFrameProduceQuery = tempProduceQuery;
        
        // Use a try and catch in order to make sure that a connection can be esablished.
        try { 
            
            // Try to establish a connection.
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConnection = DriverManager.getConnection("jdbc:mysql://dbclass.cs.nmsu.edu:3306/cs482502fa18_jbaquera?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "jbaquera", "CS482-2018" );
            copyUserQuery = tempProduceQuery.userInput;
     
        } // end try.
        
        catch ( Exception e ){
            
            // If the connection could not be established, print out an error message.
            errorMessage = errorMessage + e.getMessage();
            jTextArea1.append(errorMessage + "\n");
            jTextArea1.append("Please go back and recheck Internet Connection!\n");
            jTable2.setValueAt("ERROR!", 1, 1);
            jTable2.setValueAt("Look below for", 1, 2);
            jTable2.setValueAt("more info.", 2, 2);
            errorMessage = "Whoops. Error Type: ";
          
        } // end catch.
         
    } // end constructor.

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(2, 238, 238));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(107, 25, 25));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.setSize(new java.awt.Dimension(800, 600));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jButton1.setLabel("Go Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jButton1)
                        .addGap(0, 85, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // jButton1 represents the "Go Back" botton. 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // If the User presses this botton, hide the JFrame panel.

        // Before returning, close the connection and statement objects.
        if (sqlStatement != null){
            try {
                sqlStatement.close();
            } catch (SQLException ex) {
                Logger.getLogger(MySqlConnectDelete.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println( "Error while closing statement.");
            } // end catch.
        } // end if.
        
        if (resultSet != null){
            try {
                resultSet.close();
            } catch (SQLException ex) {
                Logger.getLogger(MySqlConnectDelete.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println( "Error while closing result set.");
            } // end catch.
        } // end if.
        
        if (sqlConnection != null){
            try {
                sqlConnection.close();
            } catch (SQLException ex) {
                Logger.getLogger(MySqlConnectDelete.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println( "Error while closing connection.");
            } // end catch.
        } // end if.
        
        setVisible( false );
        tempJFrameProduceQuery.setVisible( true );
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // getData method. This method will allow us to send queries and display the results to the user. 
    public void getData ( String temporaryQuery ) {

        // Use a try and catch that will catch any syntax errors entered by the user. 
        try{
            
            sqlStatement = sqlConnection.prepareStatement(copyUserQuery);
          
           // Start a timer that will count the amount of time it took to execute the query.
           long start = System.currentTimeMillis();              
           resultSet = sqlStatement.executeQuery();
           long finish = System.currentTimeMillis();
           long timeToExecute = finish - start;
           
           // Display the results on the table.
           jTable2.setModel(DbUtils.resultSetToTableModel(resultSet));
           jTable2.setAutoscrolls(true);
           
           // Display the time it took to execute the query.
           jTextArea1.append( "SUCCESS!! The time it took to query the data was: " + timeToExecute + " milliseconds (or equally; " + ((float)timeToExecute /1000) + " seconds, " + ((float)timeToExecute /60000) + " minutes).\n");
           jTextArea1.append( "NOTE: This DOES NOT include the time to display the results. It only accounts for the time needed to execute the query.\n" );
           
       } // end try.
       
       catch ( Exception e ){
           
           // Diplay the error if the query failed. This will happend if the user entered a syntactically 
           // inccorect query. 
           errorMessage = errorMessage + e.getMessage();
           jTextArea1.append(errorMessage + "\n" );
           jTextArea1.append("Please go back and recheck your inputted query!\n");
           jTable2.setValueAt("ERROR!", 1, 1);
           jTable2.setValueAt("Look below for", 1, 2);
           jTable2.setValueAt("more info.", 2, 2);
           errorMessage = "Whoops. Error Type: ";
           
           
       } // end catch.
       
    } // end getData.         

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

} // end class.
